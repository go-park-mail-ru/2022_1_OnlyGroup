// Code generated by MockGen. DO NOT EDIT.
// Source: app/repositories/sessions.go

// Package mock_repositories is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSessionsRepository is a mock of SessionsRepository interface.
type MockSessionsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSessionsRepositoryMockRecorder
}

// MockSessionsRepositoryMockRecorder is the mock recorder for MockSessionsRepository.
type MockSessionsRepositoryMockRecorder struct {
	mock *MockSessionsRepository
}

// NewMockSessionsRepository creates a new mock instance.
func NewMockSessionsRepository(ctrl *gomock.Controller) *MockSessionsRepository {
	mock := &MockSessionsRepository{ctrl: ctrl}
	mock.recorder = &MockSessionsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionsRepository) EXPECT() *MockSessionsRepositoryMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockSessionsRepository) Add(id int, additionalData string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", id, additionalData)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add.
func (mr *MockSessionsRepositoryMockRecorder) Add(id, additionalData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockSessionsRepository)(nil).Add), id, additionalData)
}

// Get mocks base method.
func (m *MockSessionsRepository) Get(secret string) (int, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", secret)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Get indicates an expected call of Get.
func (mr *MockSessionsRepositoryMockRecorder) Get(secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSessionsRepository)(nil).Get), secret)
}

// Remove mocks base method.
func (m *MockSessionsRepository) Remove(secret string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", secret)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockSessionsRepositoryMockRecorder) Remove(secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockSessionsRepository)(nil).Remove), secret)
}
